{
  "folders": [
    {
      "path": "."
    },
    {
      "name": "codal",
      "path": "codal/"
    },
    {
      "name": "codal-core",
      "path": "codal/libraries/codal-core"
    },
    {
      "name": "codal-stm32",
      "path": "codal/libraries/codal-stm32"
    },
    {
      "name": "codal-stm32-DISCO_L475VG_IOT",
      "path": "codal/libraries/codal-stm32-DISCO_L475VG_IOT"
    },
    {
      "name": "codal-stm32-STEAM32_WB55RG",
      "path": "codal/libraries/codal-stm32-STEAM32_WB55RG"
    },
    {
      "name": "codal-stm32-PNUCLEO_WB55RG",
      "path": "codal/libraries/codal-stm32-PNUCLEO_WB55RG"
    }
  ],
  "settings": {
    "C_Cpp.default.browse.path": [
      "${workspaceFolder}/**",
      "/arm_toolchain/arm-gnu-toolchain-13.3.rel1-x86_64-arm-none-eabi/arm-none-eabi/include/**"
    ],

    "cmake.generator": "Unix Makefiles",
    "cmake.sourceDirectory": "${workspaceFolder:codal}",
    "cmake.buildDirectory": "${workspaceFolder:codal}/build",

    "C_Cpp.default.compileCommands": "${workspaceFolder:codal}/build/compile_commands.json ",

    "files.associations": {
      "digital_io.h": "c",
      "pinconfigured.h": "c",
      "hw_config.h": "c",
      "peripheralpins.h": "c",
      "cstring": "cpp",
      "spi_com.h": "c",
      "usbd_ctlreq.h": "c",
      "usbd_ioreq.h": "c",
      "usbd_def.h": "c",
      "usbd_webusb.h": "c",
      "usbd_ep_conf.h": "c",
      "usbd_conf.h": "c",
      "stm32_def.h": "c",
      "stm32l4xx.h": "c",
      "stm32l475xx.h": "c",
      "stm32l471xx.h": "c",
      "stm32l476xx.h": "c",
      "core_cm4.h": "c",
      "system_stm32l4xx.h": "c",
      "stm32l4xx_hal.h": "c",
      "stm32l4xx_hal_conf.h": "c",
      "variant.h": "c"
    }
  },
  "extensions": {
    "recommendations": [
      "ms-vscode.cpptools-extension-pack",
      "xaver.clang-format",
      "amiralizadeh9480.cpp-helper",

      "marus25.cortex-debug",
      "dan-c-underwood.arm",
      "keroc.hex-fmt",
      "trond-snekvik.gnu-mapfiles",
      "ZixuanWang.linkerscript",
      "esbenp.prettier-vscode",
      "github.vscode-pull-request-github",
      "ms-python.python",
      "augustocdias.tasks-shell-input",
      "rioj7.command-variable"
    ],
    "unwantedRecommendations": [
      "llvm-vs-code-extensions.vscode-clangd",
      "twxs.cmake",
      "ms-vscode.cmake-tools",
      "ms-azuretools.vscode-docker",
      "ms-vscode.makefile-tools"
    ]
  },
  "tasks": {
    "version": "2.0.0",
    "tasks": [
      {
        "label": "pull all targets",
        "args": [],
        "type": "shell",
        "command": "make pull_all",
        "problemMatcher": [],
        "group": "build"
      },
      {
        "label": "tag all targets",
        "args": [],
        "type": "shell",
        "command": "make tag_all",
        "problemMatcher": [],
        "group": "build"
      },
      {
        "label": "build current target",
        "args": [],
        "type": "shell",
        "command": "make build",
        "problemMatcher": {
          "base": "$gcc",
          "fileLocation": "absolute"
        },
        "group": {
          "kind": "build",
          "isDefault": true
        }
      },
      {
        "label": "build all targets",
        "args": [],
        "type": "shell",
        "command": "make build_all",
        "problemMatcher": {
          "base": "$gcc",
          "fileLocation": "absolute"
        },
        "group": "build"
      },
      {
        "label": "build codal-stm32-DISCO_L475VG_IOT",
        "args": [],
        "type": "shell",
        "command": "make build_codal-stm32-DISCO_L475VG_IOT",
        "problemMatcher": {
          "base": "$gcc",
          "fileLocation": "absolute"
        },
        "group": "build"
      },
      {
        "label": "build codal-stm32-PNUCLEO_WB55RG",
        "args": [],
        "type": "shell",
        "command": "make build_codal-stm32-PNUCLEO_WB55RG",
        "problemMatcher": {
          "base": "$gcc",
          "fileLocation": "absolute"
        },
        "group": "build"
      },
      {
        "label": "build codal-stm32-STEAM32_WB55RG",
        "args": [],
        "type": "shell",
        "command": "make build_codal-stm32-STEAM32_WB55RG",
        "problemMatcher": {
          "base": "$gcc",
          "fileLocation": "absolute"
        },
        "group": "build"
      },
      {
        "label": "flash",
        "args": [],
        "type": "shell",
        "command": "make flash",
        "presentation": {
          "reveal": "silent"
        },
        "group": {
          "kind": "test",
          "isDefault": true
        }
      },
      {
        "label": "flash_openocd",
        "args": [],
        "type": "shell",
        "command": "make flash_openocd",
        "presentation": {
          "reveal": "silent"
        },
        "group": {
          "kind": "test",
          "isDefault": true
        }
      },
      {
        "label": "flash_pyocd",
        "args": [],
        "type": "shell",
        "command": "make flash_pyocd",

        "presentation": {
          "reveal": "silent"
        },
        "group": {
          "kind": "test"
        }
      }
    ]
  },
  "launch": {
    "version": "0.2.0",
    "configurations": [
      {
        "type": "cortex-debug",
        "request": "launch",
        "servertype": "openocd",
        "cwd": "${workspaceFolder:codal}",
        "executable": "${workspaceFolder:codal}/build/STM32",
        "name": "Debug (OpenOCD)",
        "svdFile": "${workspaceFolder:codal}/scripts/STM32.svd",
        "searchDir": [
          "/usr/share/openocd/scripts/",
          "${workspaceFolder:codal}/scripts/"
        ],
        "configFiles": ["openocd.cfg"],
        "liveWatch": {
          "enabled": true,
          "samplesPerSecond": 4
        },
        "preLaunchTask": "flash_openocd",
        "runToEntryPoint": "main",
        "showDevDebugOutput": "parsed",
        "preLaunchCommands": [
          "set mem inaccessible-by-default off",
          "enable breakpoint",
          "monitor reset"
        ]
      },
      {
        "type": "cortex-debug",
        "request": "launch",
        "servertype": "pyocd",
        "cwd": "${workspaceFolder:codal}",
        "executable": "${workspaceFolder:codal}/build/STM32",
        "name": "Debug (PyOCD)",
        "svdFile": "${workspaceFolder:codal}/scripts/STM32.svd",
        "preLaunchTask": "build current target",
        "runToEntryPoint": "main",
        "showDevDebugOutput": "parsed"
      }
    ],
    "compounds": []
  }
}
